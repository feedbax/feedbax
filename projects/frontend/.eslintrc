{
  "globals": {
    "graphql": true,
    "__PATH_PREFIX__": true,
    "__BASE_PATH__": true
  },
  "extends": [
    "/workspaces/feedbax-v3/projects/frontend/node_modules/gatsby/node_modules/eslint-config-react-app/index.js",
    "airbnb",
    "plugin:import/typescript",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended"
  ],
  "plugins": [
    "graphql",
    "@typescript-eslint",
    "import"
  ],
  "rules": {
    "react/react-in-jsx-scope": "error",
    "import/no-webpack-loader-syntax": [
      0
    ],
    "graphql/template-strings": [
      "error",
      {
        "env": "relay",
        "schemaString": "# Provides default value for input field.\ndirective @default(value: JSON!) on INPUT_FIELD_DEFINITION\n\n# Add date formatting options.\ndirective @dateformat(formatString: String, locale: String, fromNow: Boolean, difference: String) on FIELD_DEFINITION\n\n# Link to node by foreign-key relation.\ndirective @link(by: String! = \"id\", from: String, on: String) on FIELD_DEFINITION\n\n# Link to File node by relative path.\ndirective @fileByRelativePath(from: String) on FIELD_DEFINITION\n\n# Proxy resolver from another field.\ndirective @proxy(from: String!, fromNode: Boolean! = false) on FIELD_DEFINITION\n\n# Infer field types from field values.\ndirective @infer(\n  # Don't add default resolvers to defined fields.\n  noDefaultResolvers: Boolean\n) on OBJECT\n\n# Do not infer field types from field values.\ndirective @dontInfer(\n  # Don't add default resolvers to defined fields.\n  noDefaultResolvers: Boolean\n) on OBJECT\n\n# Define the mime-types handled by this type.\ndirective @mimeTypes(\n  # The mime-types handled by this type.\n  types: [String!]! = []\n) on OBJECT\n\n# Define parent-child relations between types. This is used to add `child*` or\n# `children*` convenience fields like `childImageSharp`.\ndirective @childOf(\n  # A list of mime-types this type is a child of. Usually these are the mime-types handled by a transformer plugin.\n  mimeTypes: [String!]! = []\n\n  # A list of types this type is a child of. Usually these are the types handled by a transformer plugin.\n  types: [String!]! = []\n\n  # Specifies whether a parent can have multiple children of this type or not.\n  many: Boolean! = false\n) on OBJECT\n\n# Adds root query fields for an interface. All implementing types must also implement the Node interface.\ndirective @nodeInterface on INTERFACE\n\ninput BlurredOptions {\n  # Width of the generated low-res preview. Default is 20px\n  width: Int\n\n  # Force the output format for the low-res preview. Default is to use the same\n  # format as the input. You should rarely need to change this\n  toFormat: ImageFormat\n}\n\ninput BooleanQueryOperatorInput {\n  eq: Boolean\n  ne: Boolean\n  in: [Boolean]\n  nin: [Boolean]\n}\n\n# A date string, such as 2007-12-03, compliant with the ISO 8601 standard for\n# representation of dates and times using the Gregorian calendar.\nscalar Date\n\ninput DateQueryOperatorInput {\n  eq: Date\n  ne: Date\n  gt: Date\n  gte: Date\n  lt: Date\n  lte: Date\n  in: [Date]\n  nin: [Date]\n}\n\ntype Directory implements Node {\n  sourceInstanceName: String!\n  absolutePath: String!\n  relativePath: String!\n  extension: String!\n  size: Int!\n  prettySize: String!\n  modifiedTime(\n    # Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY\n    # MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for\n    # documentation for different tokens.\n    formatString: String\n\n    # Returns a string generated with Moment.js' `fromNow` function\n    fromNow: Boolean\n\n    # Returns the difference between this date and the current time. Defaults to\n    # \"milliseconds\" but you can also pass in as the measurement \"years\",\n    # \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\".\n    difference: String\n\n    # Configures the locale Moment.js will use to format the date.\n    locale: String\n  ): Date!\n  accessTime(\n    # Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY\n    # MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for\n    # documentation for different tokens.\n    formatString: String\n\n    # Returns a string generated with Moment.js' `fromNow` function\n    fromNow: Boolean\n\n    # Returns the difference between this date and the current time. Defaults to\n    # \"milliseconds\" but you can also pass in as the measurement \"years\",\n    # \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\".\n    difference: String\n\n    # Configures the locale Moment.js will use to format the date.\n    locale: String\n  ): Date!\n  changeTime(\n    # Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY\n    # MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for\n    # documentation for different tokens.\n    formatString: String\n\n    # Returns a string generated with Moment.js' `fromNow` function\n    fromNow: Boolean\n\n    # Returns the difference between this date and the current time. Defaults to\n    # \"milliseconds\" but you can also pass in as the measurement \"years\",\n    # \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\".\n    difference: String\n\n    # Configures the locale Moment.js will use to format the date.\n    locale: String\n  ): Date!\n  birthTime(\n    # Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY\n    # MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for\n    # documentation for different tokens.\n    formatString: String\n\n    # Returns a string generated with Moment.js' `fromNow` function\n    fromNow: Boolean\n\n    # Returns the difference between this date and the current time. Defaults to\n    # \"milliseconds\" but you can also pass in as the measurement \"years\",\n    # \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\".\n    difference: String\n\n    # Configures the locale Moment.js will use to format the date.\n    locale: String\n  ): Date!\n  root: String!\n  dir: String!\n  base: String!\n  ext: String!\n  name: String!\n  relativeDirectory: String!\n  dev: Int!\n  mode: Int!\n  nlink: Int!\n  uid: Int!\n  gid: Int!\n  rdev: Int!\n  ino: Float!\n  atimeMs: Float!\n  mtimeMs: Float!\n  ctimeMs: Float!\n  atime(\n    # Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY\n    # MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for\n    # documentation for different tokens.\n    formatString: String\n\n    # Returns a string generated with Moment.js' `fromNow` function\n    fromNow: Boolean\n\n    # Returns the difference between this date and the current time. Defaults to\n    # \"milliseconds\" but you can also pass in as the measurement \"years\",\n    # \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\".\n    difference: String\n\n    # Configures the locale Moment.js will use to format the date.\n    locale: String\n  ): Date!\n  mtime(\n    # Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY\n    # MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for\n    # documentation for different tokens.\n    formatString: String\n\n    # Returns a string generated with Moment.js' `fromNow` function\n    fromNow: Boolean\n\n    # Returns the difference between this date and the current time. Defaults to\n    # \"milliseconds\" but you can also pass in as the measurement \"years\",\n    # \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\".\n    difference: String\n\n    # Configures the locale Moment.js will use to format the date.\n    locale: String\n  ): Date!\n  ctime(\n    # Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY\n    # MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for\n    # documentation for different tokens.\n    formatString: String\n\n    # Returns a string generated with Moment.js' `fromNow` function\n    fromNow: Boolean\n\n    # Returns the difference between this date and the current time. Defaults to\n    # \"milliseconds\" but you can also pass in as the measurement \"years\",\n    # \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\".\n    difference: String\n\n    # Configures the locale Moment.js will use to format the date.\n    locale: String\n  ): Date!\n  birthtime: Date @deprecated(reason: \"Use `birthTime` instead\")\n  birthtimeMs: Float @deprecated(reason: \"Use `birthTime` instead\")\n  blksize: Int\n  blocks: Int\n  id: ID!\n  parent: Node\n  children: [Node!]!\n  internal: Internal!\n}\n\ntype DirectoryConnection {\n  totalCount: Int!\n  edges: [DirectoryEdge!]!\n  nodes: [Directory!]!\n  pageInfo: PageInfo!\n  distinct(field: DirectoryFieldsEnum!): [String!]!\n  group(skip: Int, limit: Int, field: DirectoryFieldsEnum!): [DirectoryGroupConnection!]!\n}\n\ntype DirectoryEdge {\n  next: Directory\n  node: Directory!\n  previous: Directory\n}\n\nenum DirectoryFieldsEnum {\n  sourceInstanceName\n  absolutePath\n  relativePath\n  extension\n  size\n  prettySize\n  modifiedTime\n  accessTime\n  changeTime\n  birthTime\n  root\n  dir\n  base\n  ext\n  name\n  relativeDirectory\n  dev\n  mode\n  nlink\n  uid\n  gid\n  rdev\n  ino\n  atimeMs\n  mtimeMs\n  ctimeMs\n  atime\n  mtime\n  ctime\n  birthtime\n  birthtimeMs\n  blksize\n  blocks\n  id\n  parent___id\n  parent___parent___id\n  parent___parent___parent___id\n  parent___parent___parent___children\n  parent___parent___children\n  parent___parent___children___id\n  parent___parent___children___children\n  parent___parent___internal___content\n  parent___parent___internal___contentDigest\n  parent___parent___internal___description\n  parent___parent___internal___fieldOwners\n  parent___parent___internal___ignoreType\n  parent___parent___internal___mediaType\n  parent___parent___internal___owner\n  parent___parent___internal___type\n  parent___children\n  parent___children___id\n  parent___children___parent___id\n  parent___children___parent___children\n  parent___children___children\n  parent___children___children___id\n  parent___children___children___children\n  parent___children___internal___content\n  parent___children___internal___contentDigest\n  parent___children___internal___description\n  parent___children___internal___fieldOwners\n  parent___children___internal___ignoreType\n  parent___children___internal___mediaType\n  parent___children___internal___owner\n  parent___children___internal___type\n  parent___internal___content\n  parent___internal___contentDigest\n  parent___internal___description\n  parent___internal___fieldOwners\n  parent___internal___ignoreType\n  parent___internal___mediaType\n  parent___internal___owner\n  parent___internal___type\n  children\n  children___id\n  children___parent___id\n  children___parent___parent___id\n  children___parent___parent___children\n  children___parent___children\n  children___parent___children___id\n  children___parent___children___children\n  children___parent___internal___content\n  children___parent___internal___contentDigest\n  children___parent___internal___description\n  children___parent___internal___fieldOwners\n  children___parent___internal___ignoreType\n  children___parent___internal___mediaType\n  children___parent___internal___owner\n  children___parent___internal___type\n  children___children\n  children___children___id\n  children___children___parent___id\n  children___children___parent___children\n  children___children___children\n  children___children___children___id\n  children___children___children___children\n  children___children___internal___content\n  children___children___internal___contentDigest\n  children___children___internal___description\n  children___children___internal___fieldOwners\n  children___children___internal___ignoreType\n  children___children___internal___mediaType\n  children___children___internal___owner\n  children___children___internal___type\n  children___internal___content\n  children___internal___contentDigest\n  children___internal___description\n  children___internal___fieldOwners\n  children___internal___ignoreType\n  children___internal___mediaType\n  children___internal___owner\n  children___internal___type\n  internal___content\n  internal___contentDigest\n  internal___description\n  internal___fieldOwners\n  internal___ignoreType\n  internal___mediaType\n  internal___owner\n  internal___type\n}\n\ninput DirectoryFilterInput {\n  sourceInstanceName: StringQueryOperatorInput\n  absolutePath: StringQueryOperatorInput\n  relativePath: StringQueryOperatorInput\n  extension: StringQueryOperatorInput\n  size: IntQueryOperatorInput\n  prettySize: StringQueryOperatorInput\n  modifiedTime: DateQueryOperatorInput\n  accessTime: DateQueryOperatorInput\n  changeTime: DateQueryOperatorInput\n  birthTime: DateQueryOperatorInput\n  root: StringQueryOperatorInput\n  dir: StringQueryOperatorInput\n  base: StringQueryOperatorInput\n  ext: StringQueryOperatorInput\n  name: StringQueryOperatorInput\n  relativeDirectory: StringQueryOperatorInput\n  dev: IntQueryOperatorInput\n  mode: IntQueryOperatorInput\n  nlink: IntQueryOperatorInput\n  uid: IntQueryOperatorInput\n  gid: IntQueryOperatorInput\n  rdev: IntQueryOperatorInput\n  ino: FloatQueryOperatorInput\n  atimeMs: FloatQueryOperatorInput\n  mtimeMs: FloatQueryOperatorInput\n  ctimeMs: FloatQueryOperatorInput\n  atime: DateQueryOperatorInput\n  mtime: DateQueryOperatorInput\n  ctime: DateQueryOperatorInput\n  birthtime: DateQueryOperatorInput\n  birthtimeMs: FloatQueryOperatorInput\n  blksize: IntQueryOperatorInput\n  blocks: IntQueryOperatorInput\n  id: StringQueryOperatorInput\n  parent: NodeFilterInput\n  children: NodeFilterListInput\n  internal: InternalFilterInput\n}\n\ntype DirectoryGroupConnection {\n  totalCount: Int!\n  edges: [DirectoryEdge!]!\n  nodes: [Directory!]!\n  pageInfo: PageInfo!\n  field: String!\n  fieldValue: String\n}\n\ninput DirectorySortInput {\n  fields: [DirectoryFieldsEnum]\n  order: [SortOrderEnum] = [ASC]\n}\n\ninput DuotoneGradient {\n  highlight: String!\n  shadow: String!\n  opacity: Int\n}\n\ntype File implements Node {\n  sourceInstanceName: String!\n  absolutePath: String!\n  relativePath: String!\n  extension: String!\n  size: Int!\n  prettySize: String!\n  modifiedTime(\n    # Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY\n    # MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for\n    # documentation for different tokens.\n    formatString: String\n\n    # Returns a string generated with Moment.js' `fromNow` function\n    fromNow: Boolean\n\n    # Returns the difference between this date and the current time. Defaults to\n    # \"milliseconds\" but you can also pass in as the measurement \"years\",\n    # \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\".\n    difference: String\n\n    # Configures the locale Moment.js will use to format the date.\n    locale: String\n  ): Date!\n  accessTime(\n    # Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY\n    # MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for\n    # documentation for different tokens.\n    formatString: String\n\n    # Returns a string generated with Moment.js' `fromNow` function\n    fromNow: Boolean\n\n    # Returns the difference between this date and the current time. Defaults to\n    # \"milliseconds\" but you can also pass in as the measurement \"years\",\n    # \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\".\n    difference: String\n\n    # Configures the locale Moment.js will use to format the date.\n    locale: String\n  ): Date!\n  changeTime(\n    # Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY\n    # MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for\n    # documentation for different tokens.\n    formatString: String\n\n    # Returns a string generated with Moment.js' `fromNow` function\n    fromNow: Boolean\n\n    # Returns the difference between this date and the current time. Defaults to\n    # \"milliseconds\" but you can also pass in as the measurement \"years\",\n    # \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\".\n    difference: String\n\n    # Configures the locale Moment.js will use to format the date.\n    locale: String\n  ): Date!\n  birthTime(\n    # Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY\n    # MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for\n    # documentation for different tokens.\n    formatString: String\n\n    # Returns a string generated with Moment.js' `fromNow` function\n    fromNow: Boolean\n\n    # Returns the difference between this date and the current time. Defaults to\n    # \"milliseconds\" but you can also pass in as the measurement \"years\",\n    # \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\".\n    difference: String\n\n    # Configures the locale Moment.js will use to format the date.\n    locale: String\n  ): Date!\n  root: String!\n  dir: String!\n  base: String!\n  ext: String!\n  name: String!\n  relativeDirectory: String!\n  dev: Int!\n  mode: Int!\n  nlink: Int!\n  uid: Int!\n  gid: Int!\n  rdev: Int!\n  ino: Float!\n  atimeMs: Float!\n  mtimeMs: Float!\n  ctimeMs: Float!\n  atime(\n    # Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY\n    # MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for\n    # documentation for different tokens.\n    formatString: String\n\n    # Returns a string generated with Moment.js' `fromNow` function\n    fromNow: Boolean\n\n    # Returns the difference between this date and the current time. Defaults to\n    # \"milliseconds\" but you can also pass in as the measurement \"years\",\n    # \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\".\n    difference: String\n\n    # Configures the locale Moment.js will use to format the date.\n    locale: String\n  ): Date!\n  mtime(\n    # Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY\n    # MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for\n    # documentation for different tokens.\n    formatString: String\n\n    # Returns a string generated with Moment.js' `fromNow` function\n    fromNow: Boolean\n\n    # Returns the difference between this date and the current time. Defaults to\n    # \"milliseconds\" but you can also pass in as the measurement \"years\",\n    # \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\".\n    difference: String\n\n    # Configures the locale Moment.js will use to format the date.\n    locale: String\n  ): Date!\n  ctime(\n    # Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY\n    # MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for\n    # documentation for different tokens.\n    formatString: String\n\n    # Returns a string generated with Moment.js' `fromNow` function\n    fromNow: Boolean\n\n    # Returns the difference between this date and the current time. Defaults to\n    # \"milliseconds\" but you can also pass in as the measurement \"years\",\n    # \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\".\n    difference: String\n\n    # Configures the locale Moment.js will use to format the date.\n    locale: String\n  ): Date!\n  birthtime: Date @deprecated(reason: \"Use `birthTime` instead\")\n  birthtimeMs: Float @deprecated(reason: \"Use `birthTime` instead\")\n  blksize: Int\n  blocks: Int\n\n  # Copy file to static directory and return public url to it\n  publicURL: String\n  childImageSharp: ImageSharp\n  id: ID!\n  parent: Node\n  children: [Node!]!\n  internal: Internal!\n}\n\ntype FileConnection {\n  totalCount: Int!\n  edges: [FileEdge!]!\n  nodes: [File!]!\n  pageInfo: PageInfo!\n  distinct(field: FileFieldsEnum!): [String!]!\n  group(skip: Int, limit: Int, field: FileFieldsEnum!): [FileGroupConnection!]!\n}\n\ntype FileEdge {\n  next: File\n  node: File!\n  previous: File\n}\n\nenum FileFieldsEnum {\n  sourceInstanceName\n  absolutePath\n  relativePath\n  extension\n  size\n  prettySize\n  modifiedTime\n  accessTime\n  changeTime\n  birthTime\n  root\n  dir\n  base\n  ext\n  name\n  relativeDirectory\n  dev\n  mode\n  nlink\n  uid\n  gid\n  rdev\n  ino\n  atimeMs\n  mtimeMs\n  ctimeMs\n  atime\n  mtime\n  ctime\n  birthtime\n  birthtimeMs\n  blksize\n  blocks\n  publicURL\n  childImageSharp___fixed___base64 @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___fixed___tracedSVG @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___fixed___aspectRatio @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___fixed___width @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___fixed___height @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___fixed___src @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___fixed___srcSet @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___fixed___srcWebp @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___fixed___srcSetWebp @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___fixed___originalName @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___resolutions___base64 @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___resolutions___tracedSVG @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___resolutions___aspectRatio @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___resolutions___width @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___resolutions___height @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___resolutions___src @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___resolutions___srcSet @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___resolutions___srcWebp @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___resolutions___srcSetWebp @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___resolutions___originalName @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___fluid___base64 @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___fluid___tracedSVG @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___fluid___aspectRatio @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___fluid___src @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___fluid___srcSet @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___fluid___srcWebp @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___fluid___srcSetWebp @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___fluid___sizes @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___fluid___originalImg @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___fluid___originalName @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___fluid___presentationWidth @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___fluid___presentationHeight @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___sizes___base64 @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___sizes___tracedSVG @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___sizes___aspectRatio @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___sizes___src @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___sizes___srcSet @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___sizes___srcWebp @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___sizes___srcSetWebp @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___sizes___sizes @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___sizes___originalImg @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___sizes___originalName @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___sizes___presentationWidth @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___sizes___presentationHeight @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___gatsbyImageData @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___original___width @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___original___height @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___original___src @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___resize___src @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___resize___tracedSVG @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___resize___width @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___resize___height @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___resize___aspectRatio @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___resize___originalName @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___id @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___parent___id @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___parent___parent___id @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___parent___parent___children @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___parent___children @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___parent___children___id @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___parent___children___children @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___parent___internal___content @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___parent___internal___contentDigest @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___parent___internal___description @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___parent___internal___fieldOwners @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___parent___internal___ignoreType @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___parent___internal___mediaType @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___parent___internal___owner @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___parent___internal___type @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___children @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___children___id @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___children___parent___id @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___children___parent___children @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___children___children @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___children___children___id @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___children___children___children @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___children___internal___content @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___children___internal___contentDigest @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___children___internal___description @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___children___internal___fieldOwners @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___children___internal___ignoreType @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___children___internal___mediaType @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___children___internal___owner @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___children___internal___type @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___internal___content @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___internal___contentDigest @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___internal___description @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___internal___fieldOwners @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___internal___ignoreType @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___internal___mediaType @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___internal___owner @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  childImageSharp___internal___type @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  id\n  parent___id\n  parent___parent___id\n  parent___parent___parent___id\n  parent___parent___parent___children\n  parent___parent___children\n  parent___parent___children___id\n  parent___parent___children___children\n  parent___parent___internal___content\n  parent___parent___internal___contentDigest\n  parent___parent___internal___description\n  parent___parent___internal___fieldOwners\n  parent___parent___internal___ignoreType\n  parent___parent___internal___mediaType\n  parent___parent___internal___owner\n  parent___parent___internal___type\n  parent___children\n  parent___children___id\n  parent___children___parent___id\n  parent___children___parent___children\n  parent___children___children\n  parent___children___children___id\n  parent___children___children___children\n  parent___children___internal___content\n  parent___children___internal___contentDigest\n  parent___children___internal___description\n  parent___children___internal___fieldOwners\n  parent___children___internal___ignoreType\n  parent___children___internal___mediaType\n  parent___children___internal___owner\n  parent___children___internal___type\n  parent___internal___content\n  parent___internal___contentDigest\n  parent___internal___description\n  parent___internal___fieldOwners\n  parent___internal___ignoreType\n  parent___internal___mediaType\n  parent___internal___owner\n  parent___internal___type\n  children\n  children___id\n  children___parent___id\n  children___parent___parent___id\n  children___parent___parent___children\n  children___parent___children\n  children___parent___children___id\n  children___parent___children___children\n  children___parent___internal___content\n  children___parent___internal___contentDigest\n  children___parent___internal___description\n  children___parent___internal___fieldOwners\n  children___parent___internal___ignoreType\n  children___parent___internal___mediaType\n  children___parent___internal___owner\n  children___parent___internal___type\n  children___children\n  children___children___id\n  children___children___parent___id\n  children___children___parent___children\n  children___children___children\n  children___children___children___id\n  children___children___children___children\n  children___children___internal___content\n  children___children___internal___contentDigest\n  children___children___internal___description\n  children___children___internal___fieldOwners\n  children___children___internal___ignoreType\n  children___children___internal___mediaType\n  children___children___internal___owner\n  children___children___internal___type\n  children___internal___content\n  children___internal___contentDigest\n  children___internal___description\n  children___internal___fieldOwners\n  children___internal___ignoreType\n  children___internal___mediaType\n  children___internal___owner\n  children___internal___type\n  internal___content\n  internal___contentDigest\n  internal___description\n  internal___fieldOwners\n  internal___ignoreType\n  internal___mediaType\n  internal___owner\n  internal___type\n}\n\ninput FileFilterInput {\n  sourceInstanceName: StringQueryOperatorInput\n  absolutePath: StringQueryOperatorInput\n  relativePath: StringQueryOperatorInput\n  extension: StringQueryOperatorInput\n  size: IntQueryOperatorInput\n  prettySize: StringQueryOperatorInput\n  modifiedTime: DateQueryOperatorInput\n  accessTime: DateQueryOperatorInput\n  changeTime: DateQueryOperatorInput\n  birthTime: DateQueryOperatorInput\n  root: StringQueryOperatorInput\n  dir: StringQueryOperatorInput\n  base: StringQueryOperatorInput\n  ext: StringQueryOperatorInput\n  name: StringQueryOperatorInput\n  relativeDirectory: StringQueryOperatorInput\n  dev: IntQueryOperatorInput\n  mode: IntQueryOperatorInput\n  nlink: IntQueryOperatorInput\n  uid: IntQueryOperatorInput\n  gid: IntQueryOperatorInput\n  rdev: IntQueryOperatorInput\n  ino: FloatQueryOperatorInput\n  atimeMs: FloatQueryOperatorInput\n  mtimeMs: FloatQueryOperatorInput\n  ctimeMs: FloatQueryOperatorInput\n  atime: DateQueryOperatorInput\n  mtime: DateQueryOperatorInput\n  ctime: DateQueryOperatorInput\n  birthtime: DateQueryOperatorInput\n  birthtimeMs: FloatQueryOperatorInput\n  blksize: IntQueryOperatorInput\n  blocks: IntQueryOperatorInput\n  publicURL: StringQueryOperatorInput\n  childImageSharp: ImageSharpFilterInput\n  id: StringQueryOperatorInput\n  parent: NodeFilterInput\n  children: NodeFilterListInput\n  internal: InternalFilterInput\n}\n\ntype FileGroupConnection {\n  totalCount: Int!\n  edges: [FileEdge!]!\n  nodes: [File!]!\n  pageInfo: PageInfo!\n  field: String!\n  fieldValue: String\n}\n\ninput FileSortInput {\n  fields: [FileFieldsEnum]\n  order: [SortOrderEnum] = [ASC]\n}\n\ninput FloatQueryOperatorInput {\n  eq: Float\n  ne: Float\n  gt: Float\n  gte: Float\n  lt: Float\n  lte: Float\n  in: [Float]\n  nin: [Float]\n}\n\nenum HeadingsMdx {\n  h1\n  h2\n  h3\n  h4\n  h5\n  h6\n}\n\nenum ImageCropFocus {\n  CENTER\n  NORTH\n  NORTHEAST\n  EAST\n  SOUTHEAST\n  SOUTH\n  SOUTHWEST\n  WEST\n  NORTHWEST\n  ENTROPY\n  ATTENTION\n}\n\nenum ImageFit {\n  COVER\n  CONTAIN\n  FILL\n  INSIDE\n  OUTSIDE\n}\n\nenum ImageFormat {\n  NO_CHANGE\n  AUTO\n  JPG\n  PNG\n  WEBP\n}\n\nenum ImageLayout {\n  FIXED\n  FLUID\n  CONSTRAINED\n}\n\nenum ImagePlaceholder {\n  DOMINANT_COLOR\n  TRACED_SVG\n  BLURRED\n  NONE\n}\n\ntype ImageSharp implements Node {\n  fixed(width: Int, height: Int, base64Width: Int, jpegProgressive: Boolean = true, pngCompressionSpeed: Int = 4, grayscale: Boolean = false, duotone: DuotoneGradient, traceSVG: Potrace, quality: Int, jpegQuality: Int, pngQuality: Int, webpQuality: Int, toFormat: ImageFormat = AUTO, toFormatBase64: ImageFormat = AUTO, cropFocus: ImageCropFocus = ATTENTION, fit: ImageFit = COVER, background: String = \"rgba(0,0,0,1)\", rotate: Int = 0, trim: Float = 0): ImageSharpFixed\n  resolutions(width: Int, height: Int, base64Width: Int, jpegProgressive: Boolean = true, pngCompressionSpeed: Int = 4, grayscale: Boolean = false, duotone: DuotoneGradient, traceSVG: Potrace, quality: Int, jpegQuality: Int, pngQuality: Int, webpQuality: Int, toFormat: ImageFormat = AUTO, toFormatBase64: ImageFormat = AUTO, cropFocus: ImageCropFocus = ATTENTION, fit: ImageFit = COVER, background: String = \"rgba(0,0,0,1)\", rotate: Int = 0, trim: Float = 0): ImageSharpResolutions @deprecated(reason: \"Resolutions was deprecated in Gatsby v2. It's been renamed to \\\"fixed\\\" https://example.com/write-docs-and-fix-this-example-link\")\n  fluid(\n    maxWidth: Int\n    maxHeight: Int\n    base64Width: Int\n    grayscale: Boolean = false\n    jpegProgressive: Boolean = true\n    pngCompressionSpeed: Int = 4\n    duotone: DuotoneGradient\n    traceSVG: Potrace\n    quality: Int\n    jpegQuality: Int\n    pngQuality: Int\n    webpQuality: Int\n    toFormat: ImageFormat = AUTO\n    toFormatBase64: ImageFormat = AUTO\n    cropFocus: ImageCropFocus = ATTENTION\n    fit: ImageFit = COVER\n    background: String = \"rgba(0,0,0,1)\"\n    rotate: Int = 0\n    trim: Float = 0\n    sizes: String = \"\"\n\n    # A list of image widths to be generated. Example: [ 200, 340, 520, 890 ]\n    srcSetBreakpoints: [Int] = []\n  ): ImageSharpFluid\n  sizes(\n    maxWidth: Int\n    maxHeight: Int\n    base64Width: Int\n    grayscale: Boolean = false\n    jpegProgressive: Boolean = true\n    pngCompressionSpeed: Int = 4\n    duotone: DuotoneGradient\n    traceSVG: Potrace\n    quality: Int\n    jpegQuality: Int\n    pngQuality: Int\n    webpQuality: Int\n    toFormat: ImageFormat = AUTO\n    toFormatBase64: ImageFormat = AUTO\n    cropFocus: ImageCropFocus = ATTENTION\n    fit: ImageFit = COVER\n    background: String = \"rgba(0,0,0,1)\"\n    rotate: Int = 0\n    trim: Float = 0\n    sizes: String = \"\"\n\n    # A list of image widths to be generated. Example: [ 200, 340, 520, 890 ]\n    srcSetBreakpoints: [Int] = []\n  ): ImageSharpSizes @deprecated(reason: \"Sizes was deprecated in Gatsby v2. It's been renamed to \\\"fluid\\\" https://example.com/write-docs-and-fix-this-example-link\")\n  gatsbyImageData(\n    # The layout for the image.\n    # FIXED: A static image sized, that does not resize according to the screen width\n    # FLUID: The image resizes to fit its container. Pass a \"sizes\" option if it\n    # isn't going to be the full width of the screen. \n    # CONSTRAINED: Resizes to fit its container, up to a maximum width, at which point it will remain fixed in size.\n    layout: ImageLayout = FIXED\n\n    # Maximum display width of generated files. \n    # The actual largest image resolution will be this value multipled by the largest value in outputPixelDensities\n    # This only applies when layout = FLUID or CONSTRAINED. For other layout types, use \"width\"\n    maxWidth: Int\n\n    # If set, the generated image is a maximum of this height, cropping if necessary. \n    # If the image layout is \"constrained\" then the image will be limited to this height. \n    # If the aspect ratio of the image is different than the source, then the image will be cropped.\n    maxHeight: Int\n\n    # The display width of the generated image. \n    # The actual largest image resolution will be this value multipled by the largest value in outputPixelDensities\n    # Ignored if layout = FLUID or CONSTRAINED, where you should use \"maxWidth\" instead.\n    width: Int\n\n    # If set, the height of the generated image. If omitted, it is calculated from\n    # the supplied width, matching the aspect ratio of the source image.\n    height: Int\n\n    # Format of generated placeholder image, displayed while the main image loads. \n    # BLURRED: a blurred, low resolution image, encoded as a base64 data URI (default)\n    # DOMINANT_COLOR: a solid color, calculated from the dominant color of the image. \n    # TRACED_SVG: a low-resolution traced SVG of the image.\n    # NONE: no placeholder. Set \"background\" to use a fixed background color.\n    placeholder: ImagePlaceholder = BLURRED\n\n    # Options for the low-resolution placeholder image. Set placeholder to \"BLURRED\" to use this\n    blurredOptions: BlurredOptions\n\n    # Options for traced placeholder SVGs. You also should set placeholder to \"SVG\".\n    tracedSVGOptions: Potrace\n\n    # The image formats to generate. Valid values are \"AUTO\" (meaning the same\n    # format as the source image), \"JPG\", \"PNG\" and \"WEBP\". \n    # The default value is [AUTO, WEBP], and you should rarely need to change\n    # this. Take care if you specify JPG or PNG when you do\n    # not know the formats of the source images, as this could lead to unwanted\n    # results such as converting JPEGs to PNGs. Specifying \n    # both PNG and JPG is not supported and will be ignored.\n    formats: [ImageFormat] = [WEBP]\n\n    # A list of image pixel densities to generate. It will never generate images\n    # larger than the source, and will always include a 1x image. \n    # Default is [ 1, 2 ] for fixed images, meaning 1x, 2x, 3x, and [0.25, 0.5, 1,\n    # 2] for fluid. In this case, an image with a fluid layout and width = 400\n    # would generate images at 100, 200, 400 and 800px wide\n    outputPixelDensities: [Float]\n\n    # The \"sizes\" property, passed to the img tag. This describes the display size of the image. \n    # This does not affect the generated images, but is used by the browser to\n    # decide which images to download. You can leave this blank for fixed images,\n    # or if the responsive image\n    # container will be the full width of the screen. In these cases we will generate an appropriate value.\n    sizes: String = \"\"\n\n    # The default quality. This is overriden by any format-specific options\n    quality: Int\n\n    # Options to pass to sharp when generating JPG images.\n    jpgOptions: JPGOptions\n\n    # Options to pass to sharp when generating PNG images.\n    pngOptions: PNGOptions\n\n    # Options to pass to sharp when generating WebP images.\n    webpOptions: WebPOptions\n\n    # Options to pass to sharp to control cropping and other image manipulations.\n    transformOptions: TransformOptions\n\n    # Background color applied to the wrapper. Also passed to sharp to use as a\n    # background when \"letterboxing\" an image to another aspect ratio.\n    background: String = \"rgba(0,0,0,0)\"\n  ): JSON!\n  original: ImageSharpOriginal\n  resize(width: Int, height: Int, quality: Int, jpegQuality: Int, pngQuality: Int, webpQuality: Int, jpegProgressive: Boolean = true, pngCompressionLevel: Int = 9, pngCompressionSpeed: Int = 4, grayscale: Boolean = false, duotone: DuotoneGradient, base64: Boolean = false, traceSVG: Potrace, toFormat: ImageFormat = AUTO, cropFocus: ImageCropFocus = ATTENTION, fit: ImageFit = COVER, background: String = \"rgba(0,0,0,1)\", rotate: Int = 0, trim: Float = 0): ImageSharpResize\n  id: ID!\n  parent: Node\n  children: [Node!]!\n  internal: Internal!\n}\n\ntype ImageSharpConnection {\n  totalCount: Int!\n  edges: [ImageSharpEdge!]!\n  nodes: [ImageSharp!]!\n  pageInfo: PageInfo!\n  distinct(field: ImageSharpFieldsEnum!): [String!]!\n  group(skip: Int, limit: Int, field: ImageSharpFieldsEnum!): [ImageSharpGroupConnection!]!\n}\n\ntype ImageSharpEdge {\n  next: ImageSharp\n  node: ImageSharp!\n  previous: ImageSharp\n}\n\nenum ImageSharpFieldsEnum {\n  fixed___base64 @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  fixed___tracedSVG @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  fixed___aspectRatio @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  fixed___width @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  fixed___height @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  fixed___src @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  fixed___srcSet @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  fixed___srcWebp @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  fixed___srcSetWebp @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  fixed___originalName @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  resolutions___base64 @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  resolutions___tracedSVG @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  resolutions___aspectRatio @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  resolutions___width @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  resolutions___height @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  resolutions___src @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  resolutions___srcSet @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  resolutions___srcWebp @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  resolutions___srcSetWebp @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  resolutions___originalName @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  fluid___base64 @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  fluid___tracedSVG @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  fluid___aspectRatio @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  fluid___src @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  fluid___srcSet @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  fluid___srcWebp @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  fluid___srcSetWebp @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  fluid___sizes @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  fluid___originalImg @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  fluid___originalName @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  fluid___presentationWidth @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  fluid___presentationHeight @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  sizes___base64 @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  sizes___tracedSVG @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  sizes___aspectRatio @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  sizes___src @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  sizes___srcSet @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  sizes___srcWebp @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  sizes___srcSetWebp @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  sizes___sizes @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  sizes___originalImg @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  sizes___originalName @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  sizes___presentationWidth @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  sizes___presentationHeight @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  gatsbyImageData @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  original___width @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  original___height @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  original___src @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  resize___src @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  resize___tracedSVG @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  resize___width @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  resize___height @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  resize___aspectRatio @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  resize___originalName @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  id @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___id @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___parent___id @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___parent___parent___id @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___parent___parent___children @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___parent___children @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___parent___children___id @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___parent___children___children @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___parent___internal___content @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___parent___internal___contentDigest @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___parent___internal___description @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___parent___internal___fieldOwners @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___parent___internal___ignoreType @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___parent___internal___mediaType @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___parent___internal___owner @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___parent___internal___type @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___children @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___children___id @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___children___parent___id @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___children___parent___children @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___children___children @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___children___children___id @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___children___children___children @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___children___internal___content @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___children___internal___contentDigest @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___children___internal___description @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___children___internal___fieldOwners @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___children___internal___ignoreType @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___children___internal___mediaType @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___children___internal___owner @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___children___internal___type @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___internal___content @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___internal___contentDigest @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___internal___description @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___internal___fieldOwners @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___internal___ignoreType @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___internal___mediaType @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___internal___owner @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___internal___type @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___id @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___parent___id @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___parent___parent___id @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___parent___parent___children @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___parent___children @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___parent___children___id @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___parent___children___children @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___parent___internal___content @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___parent___internal___contentDigest @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___parent___internal___description @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___parent___internal___fieldOwners @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___parent___internal___ignoreType @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___parent___internal___mediaType @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___parent___internal___owner @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___parent___internal___type @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___children @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___children___id @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___children___parent___id @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___children___parent___children @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___children___children @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___children___children___id @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___children___children___children @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___children___internal___content @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___children___internal___contentDigest @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___children___internal___description @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___children___internal___fieldOwners @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___children___internal___ignoreType @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___children___internal___mediaType @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___children___internal___owner @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___children___internal___type @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___internal___content @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___internal___contentDigest @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___internal___description @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___internal___fieldOwners @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___internal___ignoreType @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___internal___mediaType @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___internal___owner @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___internal___type @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  internal___content @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  internal___contentDigest @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  internal___description @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  internal___fieldOwners @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  internal___ignoreType @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  internal___mediaType @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  internal___owner @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  internal___type @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n}\n\ninput ImageSharpFilterInput {\n  fixed: ImageSharpFixedFilterInput\n  resolutions: ImageSharpResolutionsFilterInput\n  fluid: ImageSharpFluidFilterInput\n  sizes: ImageSharpSizesFilterInput\n  gatsbyImageData: JSONQueryOperatorInput\n  original: ImageSharpOriginalFilterInput\n  resize: ImageSharpResizeFilterInput\n  id: StringQueryOperatorInput\n  parent: NodeFilterInput\n  children: NodeFilterListInput\n  internal: InternalFilterInput\n}\n\ntype ImageSharpFixed {\n  base64: String\n  tracedSVG: String\n  aspectRatio: Float\n  width: Float!\n  height: Float!\n  src: String!\n  srcSet: String!\n  srcWebp: String\n  srcSetWebp: String\n  originalName: String\n}\n\ninput ImageSharpFixedFilterInput {\n  base64: StringQueryOperatorInput\n  tracedSVG: StringQueryOperatorInput\n  aspectRatio: FloatQueryOperatorInput\n  width: FloatQueryOperatorInput\n  height: FloatQueryOperatorInput\n  src: StringQueryOperatorInput\n  srcSet: StringQueryOperatorInput\n  srcWebp: StringQueryOperatorInput\n  srcSetWebp: StringQueryOperatorInput\n  originalName: StringQueryOperatorInput\n}\n\ntype ImageSharpFluid {\n  base64: String\n  tracedSVG: String\n  aspectRatio: Float!\n  src: String!\n  srcSet: String!\n  srcWebp: String\n  srcSetWebp: String\n  sizes: String!\n  originalImg: String\n  originalName: String\n  presentationWidth: Int!\n  presentationHeight: Int!\n}\n\ninput ImageSharpFluidFilterInput {\n  base64: StringQueryOperatorInput\n  tracedSVG: StringQueryOperatorInput\n  aspectRatio: FloatQueryOperatorInput\n  src: StringQueryOperatorInput\n  srcSet: StringQueryOperatorInput\n  srcWebp: StringQueryOperatorInput\n  srcSetWebp: StringQueryOperatorInput\n  sizes: StringQueryOperatorInput\n  originalImg: StringQueryOperatorInput\n  originalName: StringQueryOperatorInput\n  presentationWidth: IntQueryOperatorInput\n  presentationHeight: IntQueryOperatorInput\n}\n\ntype ImageSharpGroupConnection {\n  totalCount: Int!\n  edges: [ImageSharpEdge!]!\n  nodes: [ImageSharp!]!\n  pageInfo: PageInfo!\n  field: String!\n  fieldValue: String\n}\n\ntype ImageSharpOriginal {\n  width: Float\n  height: Float\n  src: String\n}\n\ninput ImageSharpOriginalFilterInput {\n  width: FloatQueryOperatorInput\n  height: FloatQueryOperatorInput\n  src: StringQueryOperatorInput\n}\n\ntype ImageSharpResize {\n  src: String\n  tracedSVG: String\n  width: Int\n  height: Int\n  aspectRatio: Float\n  originalName: String\n}\n\ninput ImageSharpResizeFilterInput {\n  src: StringQueryOperatorInput\n  tracedSVG: StringQueryOperatorInput\n  width: IntQueryOperatorInput\n  height: IntQueryOperatorInput\n  aspectRatio: FloatQueryOperatorInput\n  originalName: StringQueryOperatorInput\n}\n\ntype ImageSharpResolutions {\n  base64: String\n  tracedSVG: String\n  aspectRatio: Float\n  width: Float!\n  height: Float!\n  src: String!\n  srcSet: String!\n  srcWebp: String\n  srcSetWebp: String\n  originalName: String\n}\n\ninput ImageSharpResolutionsFilterInput {\n  base64: StringQueryOperatorInput\n  tracedSVG: StringQueryOperatorInput\n  aspectRatio: FloatQueryOperatorInput\n  width: FloatQueryOperatorInput\n  height: FloatQueryOperatorInput\n  src: StringQueryOperatorInput\n  srcSet: StringQueryOperatorInput\n  srcWebp: StringQueryOperatorInput\n  srcSetWebp: StringQueryOperatorInput\n  originalName: StringQueryOperatorInput\n}\n\ntype ImageSharpSizes {\n  base64: String\n  tracedSVG: String\n  aspectRatio: Float!\n  src: String!\n  srcSet: String!\n  srcWebp: String\n  srcSetWebp: String\n  sizes: String!\n  originalImg: String\n  originalName: String\n  presentationWidth: Int!\n  presentationHeight: Int!\n}\n\ninput ImageSharpSizesFilterInput {\n  base64: StringQueryOperatorInput\n  tracedSVG: StringQueryOperatorInput\n  aspectRatio: FloatQueryOperatorInput\n  src: StringQueryOperatorInput\n  srcSet: StringQueryOperatorInput\n  srcWebp: StringQueryOperatorInput\n  srcSetWebp: StringQueryOperatorInput\n  sizes: StringQueryOperatorInput\n  originalImg: StringQueryOperatorInput\n  originalName: StringQueryOperatorInput\n  presentationWidth: IntQueryOperatorInput\n  presentationHeight: IntQueryOperatorInput\n}\n\ninput ImageSharpSortInput {\n  fields: [ImageSharpFieldsEnum]\n  order: [SortOrderEnum] = [ASC]\n}\n\ntype Internal {\n  content: String\n  contentDigest: String!\n  description: String\n  fieldOwners: [String]\n  ignoreType: Boolean\n  mediaType: String\n  owner: String!\n  type: String!\n}\n\ninput InternalFilterInput {\n  content: StringQueryOperatorInput\n  contentDigest: StringQueryOperatorInput\n  description: StringQueryOperatorInput\n  fieldOwners: StringQueryOperatorInput\n  ignoreType: BooleanQueryOperatorInput\n  mediaType: StringQueryOperatorInput\n  owner: StringQueryOperatorInput\n  type: StringQueryOperatorInput\n}\n\ninput IntQueryOperatorInput {\n  eq: Int\n  ne: Int\n  gt: Int\n  gte: Int\n  lt: Int\n  lte: Int\n  in: [Int]\n  nin: [Int]\n}\n\ninput JPGOptions {\n  quality: Int\n  progressive: Boolean = true\n}\n\n# The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).\nscalar JSON\n\ninput JSONQueryOperatorInput {\n  eq: JSON\n  ne: JSON\n  in: [JSON]\n  nin: [JSON]\n  regex: JSON\n  glob: JSON\n}\n\ntype Mdx implements Node {\n  rawBody: String!\n  fileAbsolutePath: String!\n  frontmatter: MdxFrontmatter\n  slug: String\n  body: String!\n  excerpt(pruneLength: Int = 140, truncate: Boolean = false): String!\n  headings(depth: HeadingsMdx): [MdxHeadingMdx]\n  html: String\n  mdxAST: JSON\n  tableOfContents(maxDepth: Int): JSON\n  timeToRead: Int\n  wordCount: MdxWordCount\n  id: ID!\n  parent: Node\n  children: [Node!]!\n  internal: Internal!\n}\n\ntype MdxConnection {\n  totalCount: Int!\n  edges: [MdxEdge!]!\n  nodes: [Mdx!]!\n  pageInfo: PageInfo!\n  distinct(field: MdxFieldsEnum!): [String!]!\n  group(skip: Int, limit: Int, field: MdxFieldsEnum!): [MdxGroupConnection!]!\n}\n\ntype MdxEdge {\n  next: Mdx\n  node: Mdx!\n  previous: Mdx\n}\n\nenum MdxFieldsEnum {\n  rawBody\n  fileAbsolutePath\n  frontmatter___title\n  slug\n  body\n  excerpt @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  headings @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  headings___value @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  headings___depth @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  html @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  mdxAST @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  tableOfContents @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  timeToRead @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  wordCount___paragraphs @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  wordCount___sentences @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  wordCount___words @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  id @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___id @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___parent___id @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___parent___parent___id @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___parent___parent___children @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___parent___children @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___parent___children___id @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___parent___children___children @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___parent___internal___content @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___parent___internal___contentDigest @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___parent___internal___description @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___parent___internal___fieldOwners @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___parent___internal___ignoreType @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___parent___internal___mediaType @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___parent___internal___owner @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___parent___internal___type @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___children @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___children___id @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___children___parent___id @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___children___parent___children @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___children___children @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___children___children___id @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___children___children___children @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___children___internal___content @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___children___internal___contentDigest @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___children___internal___description @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___children___internal___fieldOwners @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___children___internal___ignoreType @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___children___internal___mediaType @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___children___internal___owner @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___children___internal___type @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___internal___content @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___internal___contentDigest @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___internal___description @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___internal___fieldOwners @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___internal___ignoreType @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___internal___mediaType @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___internal___owner @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  parent___internal___type @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___id @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___parent___id @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___parent___parent___id @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___parent___parent___children @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___parent___children @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___parent___children___id @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___parent___children___children @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___parent___internal___content @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___parent___internal___contentDigest @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___parent___internal___description @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___parent___internal___fieldOwners @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___parent___internal___ignoreType @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___parent___internal___mediaType @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___parent___internal___owner @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___parent___internal___type @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___children @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___children___id @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___children___parent___id @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___children___parent___children @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___children___children @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___children___children___id @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___children___children___children @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___children___internal___content @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___children___internal___contentDigest @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___children___internal___description @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___children___internal___fieldOwners @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___children___internal___ignoreType @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___children___internal___mediaType @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___children___internal___owner @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___children___internal___type @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___internal___content @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___internal___contentDigest @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___internal___description @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___internal___fieldOwners @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___internal___ignoreType @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___internal___mediaType @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___internal___owner @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  children___internal___type @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  internal___content @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  internal___contentDigest @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  internal___description @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  internal___fieldOwners @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  internal___ignoreType @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  internal___mediaType @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  internal___owner @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n  internal___type @deprecated(reason: \"Sorting on fields that need arguments to resolve is deprecated.\")\n}\n\ninput MdxFilterInput {\n  rawBody: StringQueryOperatorInput\n  fileAbsolutePath: StringQueryOperatorInput\n  frontmatter: MdxFrontmatterFilterInput\n  slug: StringQueryOperatorInput\n  body: StringQueryOperatorInput\n  excerpt: StringQueryOperatorInput\n  headings: MdxHeadingMdxFilterListInput\n  html: StringQueryOperatorInput\n  mdxAST: JSONQueryOperatorInput\n  tableOfContents: JSONQueryOperatorInput\n  timeToRead: IntQueryOperatorInput\n  wordCount: MdxWordCountFilterInput\n  id: StringQueryOperatorInput\n  parent: NodeFilterInput\n  children: NodeFilterListInput\n  internal: InternalFilterInput\n}\n\ntype MdxFrontmatter {\n  title: String!\n}\n\ninput MdxFrontmatterFilterInput {\n  title: StringQueryOperatorInput\n}\n\ntype MdxGroupConnection {\n  totalCount: Int!\n  edges: [MdxEdge!]!\n  nodes: [Mdx!]!\n  pageInfo: PageInfo!\n  field: String!\n  fieldValue: String\n}\n\ntype MdxHeadingMdx {\n  value: String\n  depth: Int\n}\n\ninput MdxHeadingMdxFilterInput {\n  value: StringQueryOperatorInput\n  depth: IntQueryOperatorInput\n}\n\ninput MdxHeadingMdxFilterListInput {\n  elemMatch: MdxHeadingMdxFilterInput\n}\n\ninput MdxSortInput {\n  fields: [MdxFieldsEnum]\n  order: [SortOrderEnum] = [ASC]\n}\n\ntype MdxWordCount {\n  paragraphs: Int\n  sentences: Int\n  words: Int\n}\n\ninput MdxWordCountFilterInput {\n  paragraphs: IntQueryOperatorInput\n  sentences: IntQueryOperatorInput\n  words: IntQueryOperatorInput\n}\n\n# Node Interface\ninterface Node {\n  id: ID!\n  parent: Node\n  children: [Node!]!\n  internal: Internal!\n}\n\ninput NodeFilterInput {\n  id: StringQueryOperatorInput\n  parent: NodeFilterInput\n  children: NodeFilterListInput\n  internal: InternalFilterInput\n}\n\ninput NodeFilterListInput {\n  elemMatch: NodeFilterInput\n}\n\ntype PageInfo {\n  currentPage: Int!\n  hasPreviousPage: Boolean!\n  hasNextPage: Boolean!\n  itemCount: Int!\n  pageCount: Int!\n  perPage: Int\n  totalCount: Int!\n}\n\ninput PNGOptions {\n  quality: Int\n  compressionSpeed: Int = 4\n}\n\ninput Potrace {\n  turnPolicy: PotraceTurnPolicy\n  turdSize: Float\n  alphaMax: Float\n  optCurve: Boolean\n  optTolerance: Float\n  threshold: Int\n  blackOnWhite: Boolean\n  color: String\n  background: String\n}\n\nenum PotraceTurnPolicy {\n  TURNPOLICY_BLACK\n  TURNPOLICY_WHITE\n  TURNPOLICY_LEFT\n  TURNPOLICY_RIGHT\n  TURNPOLICY_MINORITY\n  TURNPOLICY_MAJORITY\n}\n\ntype Query {\n  file(sourceInstanceName: StringQueryOperatorInput, absolutePath: StringQueryOperatorInput, relativePath: StringQueryOperatorInput, extension: StringQueryOperatorInput, size: IntQueryOperatorInput, prettySize: StringQueryOperatorInput, modifiedTime: DateQueryOperatorInput, accessTime: DateQueryOperatorInput, changeTime: DateQueryOperatorInput, birthTime: DateQueryOperatorInput, root: StringQueryOperatorInput, dir: StringQueryOperatorInput, base: StringQueryOperatorInput, ext: StringQueryOperatorInput, name: StringQueryOperatorInput, relativeDirectory: StringQueryOperatorInput, dev: IntQueryOperatorInput, mode: IntQueryOperatorInput, nlink: IntQueryOperatorInput, uid: IntQueryOperatorInput, gid: IntQueryOperatorInput, rdev: IntQueryOperatorInput, ino: FloatQueryOperatorInput, atimeMs: FloatQueryOperatorInput, mtimeMs: FloatQueryOperatorInput, ctimeMs: FloatQueryOperatorInput, atime: DateQueryOperatorInput, mtime: DateQueryOperatorInput, ctime: DateQueryOperatorInput, birthtime: DateQueryOperatorInput, birthtimeMs: FloatQueryOperatorInput, blksize: IntQueryOperatorInput, blocks: IntQueryOperatorInput, publicURL: StringQueryOperatorInput, childImageSharp: ImageSharpFilterInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): File\n  allFile(filter: FileFilterInput, sort: FileSortInput, skip: Int, limit: Int): FileConnection!\n  directory(sourceInstanceName: StringQueryOperatorInput, absolutePath: StringQueryOperatorInput, relativePath: StringQueryOperatorInput, extension: StringQueryOperatorInput, size: IntQueryOperatorInput, prettySize: StringQueryOperatorInput, modifiedTime: DateQueryOperatorInput, accessTime: DateQueryOperatorInput, changeTime: DateQueryOperatorInput, birthTime: DateQueryOperatorInput, root: StringQueryOperatorInput, dir: StringQueryOperatorInput, base: StringQueryOperatorInput, ext: StringQueryOperatorInput, name: StringQueryOperatorInput, relativeDirectory: StringQueryOperatorInput, dev: IntQueryOperatorInput, mode: IntQueryOperatorInput, nlink: IntQueryOperatorInput, uid: IntQueryOperatorInput, gid: IntQueryOperatorInput, rdev: IntQueryOperatorInput, ino: FloatQueryOperatorInput, atimeMs: FloatQueryOperatorInput, mtimeMs: FloatQueryOperatorInput, ctimeMs: FloatQueryOperatorInput, atime: DateQueryOperatorInput, mtime: DateQueryOperatorInput, ctime: DateQueryOperatorInput, birthtime: DateQueryOperatorInput, birthtimeMs: FloatQueryOperatorInput, blksize: IntQueryOperatorInput, blocks: IntQueryOperatorInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): Directory\n  allDirectory(filter: DirectoryFilterInput, sort: DirectorySortInput, skip: Int, limit: Int): DirectoryConnection!\n  site(buildTime: DateQueryOperatorInput, siteMetadata: SiteSiteMetadataFilterInput, port: IntQueryOperatorInput, host: StringQueryOperatorInput, polyfill: BooleanQueryOperatorInput, pathPrefix: StringQueryOperatorInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): Site\n  allSite(filter: SiteFilterInput, sort: SiteSortInput, skip: Int, limit: Int): SiteConnection!\n  sitePage(path: StringQueryOperatorInput, component: StringQueryOperatorInput, internalComponentName: StringQueryOperatorInput, componentChunkName: StringQueryOperatorInput, matchPath: StringQueryOperatorInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, isCreatedByStatefulCreatePages: BooleanQueryOperatorInput, context: SitePageContextFilterInput, pluginCreator: SitePluginFilterInput, pluginCreatorId: StringQueryOperatorInput, componentPath: StringQueryOperatorInput): SitePage\n  allSitePage(filter: SitePageFilterInput, sort: SitePageSortInput, skip: Int, limit: Int): SitePageConnection!\n  imageSharp(fixed: ImageSharpFixedFilterInput, resolutions: ImageSharpResolutionsFilterInput, fluid: ImageSharpFluidFilterInput, sizes: ImageSharpSizesFilterInput, gatsbyImageData: JSONQueryOperatorInput, original: ImageSharpOriginalFilterInput, resize: ImageSharpResizeFilterInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): ImageSharp\n  allImageSharp(filter: ImageSharpFilterInput, sort: ImageSharpSortInput, skip: Int, limit: Int): ImageSharpConnection!\n  mdx(rawBody: StringQueryOperatorInput, fileAbsolutePath: StringQueryOperatorInput, frontmatter: MdxFrontmatterFilterInput, slug: StringQueryOperatorInput, body: StringQueryOperatorInput, excerpt: StringQueryOperatorInput, headings: MdxHeadingMdxFilterListInput, html: StringQueryOperatorInput, mdxAST: JSONQueryOperatorInput, tableOfContents: JSONQueryOperatorInput, timeToRead: IntQueryOperatorInput, wordCount: MdxWordCountFilterInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): Mdx\n  allMdx(filter: MdxFilterInput, sort: MdxSortInput, skip: Int, limit: Int): MdxConnection!\n  siteBuildMetadata(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, buildTime: DateQueryOperatorInput): SiteBuildMetadata\n  allSiteBuildMetadata(filter: SiteBuildMetadataFilterInput, sort: SiteBuildMetadataSortInput, skip: Int, limit: Int): SiteBuildMetadataConnection!\n  sitePlugin(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, resolve: StringQueryOperatorInput, name: StringQueryOperatorInput, version: StringQueryOperatorInput, pluginOptions: SitePluginPluginOptionsFilterInput, nodeAPIs: StringQueryOperatorInput, browserAPIs: StringQueryOperatorInput, ssrAPIs: StringQueryOperatorInput, pluginFilepath: StringQueryOperatorInput, packageJson: SitePluginPackageJsonFilterInput): SitePlugin\n  allSitePlugin(filter: SitePluginFilterInput, sort: SitePluginSortInput, skip: Int, limit: Int): SitePluginConnection!\n}\n\ntype Site implements Node {\n  buildTime(\n    # Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY\n    # MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for\n    # documentation for different tokens.\n    formatString: String\n\n    # Returns a string generated with Moment.js' `fromNow` function\n    fromNow: Boolean\n\n    # Returns the difference between this date and the current time. Defaults to\n    # \"milliseconds\" but you can also pass in as the measurement \"years\",\n    # \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\".\n    difference: String\n\n    # Configures the locale Moment.js will use to format the date.\n    locale: String\n  ): Date\n  siteMetadata: SiteSiteMetadata\n  port: Int\n  host: String\n  polyfill: Boolean\n  pathPrefix: String\n  id: ID!\n  parent: Node\n  children: [Node!]!\n  internal: Internal!\n}\n\ntype SiteBuildMetadata implements Node {\n  id: ID!\n  parent: Node\n  children: [Node!]!\n  internal: Internal!\n  buildTime(\n    # Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY\n    # MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for\n    # documentation for different tokens.\n    formatString: String\n\n    # Returns a string generated with Moment.js' `fromNow` function\n    fromNow: Boolean\n\n    # Returns the difference between this date and the current time. Defaults to\n    # \"milliseconds\" but you can also pass in as the measurement \"years\",\n    # \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\".\n    difference: String\n\n    # Configures the locale Moment.js will use to format the date.\n    locale: String\n  ): Date\n}\n\ntype SiteBuildMetadataConnection {\n  totalCount: Int!\n  edges: [SiteBuildMetadataEdge!]!\n  nodes: [SiteBuildMetadata!]!\n  pageInfo: PageInfo!\n  distinct(field: SiteBuildMetadataFieldsEnum!): [String!]!\n  group(skip: Int, limit: Int, field: SiteBuildMetadataFieldsEnum!): [SiteBuildMetadataGroupConnection!]!\n}\n\ntype SiteBuildMetadataEdge {\n  next: SiteBuildMetadata\n  node: SiteBuildMetadata!\n  previous: SiteBuildMetadata\n}\n\nenum SiteBuildMetadataFieldsEnum {\n  id\n  parent___id\n  parent___parent___id\n  parent___parent___parent___id\n  parent___parent___parent___children\n  parent___parent___children\n  parent___parent___children___id\n  parent___parent___children___children\n  parent___parent___internal___content\n  parent___parent___internal___contentDigest\n  parent___parent___internal___description\n  parent___parent___internal___fieldOwners\n  parent___parent___internal___ignoreType\n  parent___parent___internal___mediaType\n  parent___parent___internal___owner\n  parent___parent___internal___type\n  parent___children\n  parent___children___id\n  parent___children___parent___id\n  parent___children___parent___children\n  parent___children___children\n  parent___children___children___id\n  parent___children___children___children\n  parent___children___internal___content\n  parent___children___internal___contentDigest\n  parent___children___internal___description\n  parent___children___internal___fieldOwners\n  parent___children___internal___ignoreType\n  parent___children___internal___mediaType\n  parent___children___internal___owner\n  parent___children___internal___type\n  parent___internal___content\n  parent___internal___contentDigest\n  parent___internal___description\n  parent___internal___fieldOwners\n  parent___internal___ignoreType\n  parent___internal___mediaType\n  parent___internal___owner\n  parent___internal___type\n  children\n  children___id\n  children___parent___id\n  children___parent___parent___id\n  children___parent___parent___children\n  children___parent___children\n  children___parent___children___id\n  children___parent___children___children\n  children___parent___internal___content\n  children___parent___internal___contentDigest\n  children___parent___internal___description\n  children___parent___internal___fieldOwners\n  children___parent___internal___ignoreType\n  children___parent___internal___mediaType\n  children___parent___internal___owner\n  children___parent___internal___type\n  children___children\n  children___children___id\n  children___children___parent___id\n  children___children___parent___children\n  children___children___children\n  children___children___children___id\n  children___children___children___children\n  children___children___internal___content\n  children___children___internal___contentDigest\n  children___children___internal___description\n  children___children___internal___fieldOwners\n  children___children___internal___ignoreType\n  children___children___internal___mediaType\n  children___children___internal___owner\n  children___children___internal___type\n  children___internal___content\n  children___internal___contentDigest\n  children___internal___description\n  children___internal___fieldOwners\n  children___internal___ignoreType\n  children___internal___mediaType\n  children___internal___owner\n  children___internal___type\n  internal___content\n  internal___contentDigest\n  internal___description\n  internal___fieldOwners\n  internal___ignoreType\n  internal___mediaType\n  internal___owner\n  internal___type\n  buildTime\n}\n\ninput SiteBuildMetadataFilterInput {\n  id: StringQueryOperatorInput\n  parent: NodeFilterInput\n  children: NodeFilterListInput\n  internal: InternalFilterInput\n  buildTime: DateQueryOperatorInput\n}\n\ntype SiteBuildMetadataGroupConnection {\n  totalCount: Int!\n  edges: [SiteBuildMetadataEdge!]!\n  nodes: [SiteBuildMetadata!]!\n  pageInfo: PageInfo!\n  field: String!\n  fieldValue: String\n}\n\ninput SiteBuildMetadataSortInput {\n  fields: [SiteBuildMetadataFieldsEnum]\n  order: [SortOrderEnum] = [ASC]\n}\n\ntype SiteConnection {\n  totalCount: Int!\n  edges: [SiteEdge!]!\n  nodes: [Site!]!\n  pageInfo: PageInfo!\n  distinct(field: SiteFieldsEnum!): [String!]!\n  group(skip: Int, limit: Int, field: SiteFieldsEnum!): [SiteGroupConnection!]!\n}\n\ntype SiteEdge {\n  next: Site\n  node: Site!\n  previous: Site\n}\n\nenum SiteFieldsEnum {\n  buildTime\n  siteMetadata___title\n  siteMetadata___description\n  port\n  host\n  polyfill\n  pathPrefix\n  id\n  parent___id\n  parent___parent___id\n  parent___parent___parent___id\n  parent___parent___parent___children\n  parent___parent___children\n  parent___parent___children___id\n  parent___parent___children___children\n  parent___parent___internal___content\n  parent___parent___internal___contentDigest\n  parent___parent___internal___description\n  parent___parent___internal___fieldOwners\n  parent___parent___internal___ignoreType\n  parent___parent___internal___mediaType\n  parent___parent___internal___owner\n  parent___parent___internal___type\n  parent___children\n  parent___children___id\n  parent___children___parent___id\n  parent___children___parent___children\n  parent___children___children\n  parent___children___children___id\n  parent___children___children___children\n  parent___children___internal___content\n  parent___children___internal___contentDigest\n  parent___children___internal___description\n  parent___children___internal___fieldOwners\n  parent___children___internal___ignoreType\n  parent___children___internal___mediaType\n  parent___children___internal___owner\n  parent___children___internal___type\n  parent___internal___content\n  parent___internal___contentDigest\n  parent___internal___description\n  parent___internal___fieldOwners\n  parent___internal___ignoreType\n  parent___internal___mediaType\n  parent___internal___owner\n  parent___internal___type\n  children\n  children___id\n  children___parent___id\n  children___parent___parent___id\n  children___parent___parent___children\n  children___parent___children\n  children___parent___children___id\n  children___parent___children___children\n  children___parent___internal___content\n  children___parent___internal___contentDigest\n  children___parent___internal___description\n  children___parent___internal___fieldOwners\n  children___parent___internal___ignoreType\n  children___parent___internal___mediaType\n  children___parent___internal___owner\n  children___parent___internal___type\n  children___children\n  children___children___id\n  children___children___parent___id\n  children___children___parent___children\n  children___children___children\n  children___children___children___id\n  children___children___children___children\n  children___children___internal___content\n  children___children___internal___contentDigest\n  children___children___internal___description\n  children___children___internal___fieldOwners\n  children___children___internal___ignoreType\n  children___children___internal___mediaType\n  children___children___internal___owner\n  children___children___internal___type\n  children___internal___content\n  children___internal___contentDigest\n  children___internal___description\n  children___internal___fieldOwners\n  children___internal___ignoreType\n  children___internal___mediaType\n  children___internal___owner\n  children___internal___type\n  internal___content\n  internal___contentDigest\n  internal___description\n  internal___fieldOwners\n  internal___ignoreType\n  internal___mediaType\n  internal___owner\n  internal___type\n}\n\ninput SiteFilterInput {\n  buildTime: DateQueryOperatorInput\n  siteMetadata: SiteSiteMetadataFilterInput\n  port: IntQueryOperatorInput\n  host: StringQueryOperatorInput\n  polyfill: BooleanQueryOperatorInput\n  pathPrefix: StringQueryOperatorInput\n  id: StringQueryOperatorInput\n  parent: NodeFilterInput\n  children: NodeFilterListInput\n  internal: InternalFilterInput\n}\n\ntype SiteGroupConnection {\n  totalCount: Int!\n  edges: [SiteEdge!]!\n  nodes: [Site!]!\n  pageInfo: PageInfo!\n  field: String!\n  fieldValue: String\n}\n\ntype SitePage implements Node {\n  path: String!\n  component: String!\n  internalComponentName: String!\n  componentChunkName: String!\n  matchPath: String\n  id: ID!\n  parent: Node\n  children: [Node!]!\n  internal: Internal!\n  isCreatedByStatefulCreatePages: Boolean\n  context: SitePageContext\n  pluginCreator: SitePlugin\n  pluginCreatorId: String\n  componentPath: String\n}\n\ntype SitePageConnection {\n  totalCount: Int!\n  edges: [SitePageEdge!]!\n  nodes: [SitePage!]!\n  pageInfo: PageInfo!\n  distinct(field: SitePageFieldsEnum!): [String!]!\n  group(skip: Int, limit: Int, field: SitePageFieldsEnum!): [SitePageGroupConnection!]!\n}\n\ntype SitePageContext {\n  originalPath: String\n  locale: String\n  originalMatchPath: String\n}\n\ninput SitePageContextFilterInput {\n  originalPath: StringQueryOperatorInput\n  locale: StringQueryOperatorInput\n  originalMatchPath: StringQueryOperatorInput\n}\n\ntype SitePageEdge {\n  next: SitePage\n  node: SitePage!\n  previous: SitePage\n}\n\nenum SitePageFieldsEnum {\n  path\n  component\n  internalComponentName\n  componentChunkName\n  matchPath\n  id\n  parent___id\n  parent___parent___id\n  parent___parent___parent___id\n  parent___parent___parent___children\n  parent___parent___children\n  parent___parent___children___id\n  parent___parent___children___children\n  parent___parent___internal___content\n  parent___parent___internal___contentDigest\n  parent___parent___internal___description\n  parent___parent___internal___fieldOwners\n  parent___parent___internal___ignoreType\n  parent___parent___internal___mediaType\n  parent___parent___internal___owner\n  parent___parent___internal___type\n  parent___children\n  parent___children___id\n  parent___children___parent___id\n  parent___children___parent___children\n  parent___children___children\n  parent___children___children___id\n  parent___children___children___children\n  parent___children___internal___content\n  parent___children___internal___contentDigest\n  parent___children___internal___description\n  parent___children___internal___fieldOwners\n  parent___children___internal___ignoreType\n  parent___children___internal___mediaType\n  parent___children___internal___owner\n  parent___children___internal___type\n  parent___internal___content\n  parent___internal___contentDigest\n  parent___internal___description\n  parent___internal___fieldOwners\n  parent___internal___ignoreType\n  parent___internal___mediaType\n  parent___internal___owner\n  parent___internal___type\n  children\n  children___id\n  children___parent___id\n  children___parent___parent___id\n  children___parent___parent___children\n  children___parent___children\n  children___parent___children___id\n  children___parent___children___children\n  children___parent___internal___content\n  children___parent___internal___contentDigest\n  children___parent___internal___description\n  children___parent___internal___fieldOwners\n  children___parent___internal___ignoreType\n  children___parent___internal___mediaType\n  children___parent___internal___owner\n  children___parent___internal___type\n  children___children\n  children___children___id\n  children___children___parent___id\n  children___children___parent___children\n  children___children___children\n  children___children___children___id\n  children___children___children___children\n  children___children___internal___content\n  children___children___internal___contentDigest\n  children___children___internal___description\n  children___children___internal___fieldOwners\n  children___children___internal___ignoreType\n  children___children___internal___mediaType\n  children___children___internal___owner\n  children___children___internal___type\n  children___internal___content\n  children___internal___contentDigest\n  children___internal___description\n  children___internal___fieldOwners\n  children___internal___ignoreType\n  children___internal___mediaType\n  children___internal___owner\n  children___internal___type\n  internal___content\n  internal___contentDigest\n  internal___description\n  internal___fieldOwners\n  internal___ignoreType\n  internal___mediaType\n  internal___owner\n  internal___type\n  isCreatedByStatefulCreatePages\n  context___originalPath\n  context___locale\n  context___originalMatchPath\n  pluginCreator___id\n  pluginCreator___parent___id\n  pluginCreator___parent___parent___id\n  pluginCreator___parent___parent___children\n  pluginCreator___parent___children\n  pluginCreator___parent___children___id\n  pluginCreator___parent___children___children\n  pluginCreator___parent___internal___content\n  pluginCreator___parent___internal___contentDigest\n  pluginCreator___parent___internal___description\n  pluginCreator___parent___internal___fieldOwners\n  pluginCreator___parent___internal___ignoreType\n  pluginCreator___parent___internal___mediaType\n  pluginCreator___parent___internal___owner\n  pluginCreator___parent___internal___type\n  pluginCreator___children\n  pluginCreator___children___id\n  pluginCreator___children___parent___id\n  pluginCreator___children___parent___children\n  pluginCreator___children___children\n  pluginCreator___children___children___id\n  pluginCreator___children___children___children\n  pluginCreator___children___internal___content\n  pluginCreator___children___internal___contentDigest\n  pluginCreator___children___internal___description\n  pluginCreator___children___internal___fieldOwners\n  pluginCreator___children___internal___ignoreType\n  pluginCreator___children___internal___mediaType\n  pluginCreator___children___internal___owner\n  pluginCreator___children___internal___type\n  pluginCreator___internal___content\n  pluginCreator___internal___contentDigest\n  pluginCreator___internal___description\n  pluginCreator___internal___fieldOwners\n  pluginCreator___internal___ignoreType\n  pluginCreator___internal___mediaType\n  pluginCreator___internal___owner\n  pluginCreator___internal___type\n  pluginCreator___resolve\n  pluginCreator___name\n  pluginCreator___version\n  pluginCreator___pluginOptions___isTSX\n  pluginCreator___pluginOptions___jsxPragma\n  pluginCreator___pluginOptions___allExtensions\n  pluginCreator___pluginOptions___name\n  pluginCreator___pluginOptions___path\n  pluginCreator___pluginOptions___base64Width\n  pluginCreator___pluginOptions___stripMetadata\n  pluginCreator___pluginOptions___defaultQuality\n  pluginCreator___pluginOptions___failOnError\n  pluginCreator___pluginOptions___sourceMap\n  pluginCreator___pluginOptions___autoLabel\n  pluginCreator___pluginOptions___labelFormat\n  pluginCreator___pluginOptions___cssPropOptimization\n  pluginCreator___pluginOptions___extensions\n  pluginCreator___pluginOptions___lessBabel\n  pluginCreator___pluginOptions___mediaTypes\n  pluginCreator___pluginOptions___pathCheck\n  pluginCreator___nodeAPIs\n  pluginCreator___browserAPIs\n  pluginCreator___ssrAPIs\n  pluginCreator___pluginFilepath\n  pluginCreator___packageJson___name\n  pluginCreator___packageJson___description\n  pluginCreator___packageJson___version\n  pluginCreator___packageJson___main\n  pluginCreator___packageJson___author\n  pluginCreator___packageJson___license\n  pluginCreator___packageJson___dependencies\n  pluginCreator___packageJson___dependencies___name\n  pluginCreator___packageJson___dependencies___version\n  pluginCreator___packageJson___devDependencies\n  pluginCreator___packageJson___devDependencies___name\n  pluginCreator___packageJson___devDependencies___version\n  pluginCreator___packageJson___peerDependencies\n  pluginCreator___packageJson___peerDependencies___name\n  pluginCreator___packageJson___peerDependencies___version\n  pluginCreator___packageJson___keywords\n  pluginCreatorId\n  componentPath\n}\n\ninput SitePageFilterInput {\n  path: StringQueryOperatorInput\n  component: StringQueryOperatorInput\n  internalComponentName: StringQueryOperatorInput\n  componentChunkName: StringQueryOperatorInput\n  matchPath: StringQueryOperatorInput\n  id: StringQueryOperatorInput\n  parent: NodeFilterInput\n  children: NodeFilterListInput\n  internal: InternalFilterInput\n  isCreatedByStatefulCreatePages: BooleanQueryOperatorInput\n  context: SitePageContextFilterInput\n  pluginCreator: SitePluginFilterInput\n  pluginCreatorId: StringQueryOperatorInput\n  componentPath: StringQueryOperatorInput\n}\n\ntype SitePageGroupConnection {\n  totalCount: Int!\n  edges: [SitePageEdge!]!\n  nodes: [SitePage!]!\n  pageInfo: PageInfo!\n  field: String!\n  fieldValue: String\n}\n\ninput SitePageSortInput {\n  fields: [SitePageFieldsEnum]\n  order: [SortOrderEnum] = [ASC]\n}\n\ntype SitePlugin implements Node {\n  id: ID!\n  parent: Node\n  children: [Node!]!\n  internal: Internal!\n  resolve: String\n  name: String\n  version: String\n  pluginOptions: SitePluginPluginOptions\n  nodeAPIs: [String]\n  browserAPIs: [String]\n  ssrAPIs: [String]\n  pluginFilepath: String\n  packageJson: SitePluginPackageJson\n}\n\ntype SitePluginConnection {\n  totalCount: Int!\n  edges: [SitePluginEdge!]!\n  nodes: [SitePlugin!]!\n  pageInfo: PageInfo!\n  distinct(field: SitePluginFieldsEnum!): [String!]!\n  group(skip: Int, limit: Int, field: SitePluginFieldsEnum!): [SitePluginGroupConnection!]!\n}\n\ntype SitePluginEdge {\n  next: SitePlugin\n  node: SitePlugin!\n  previous: SitePlugin\n}\n\nenum SitePluginFieldsEnum {\n  id\n  parent___id\n  parent___parent___id\n  parent___parent___parent___id\n  parent___parent___parent___children\n  parent___parent___children\n  parent___parent___children___id\n  parent___parent___children___children\n  parent___parent___internal___content\n  parent___parent___internal___contentDigest\n  parent___parent___internal___description\n  parent___parent___internal___fieldOwners\n  parent___parent___internal___ignoreType\n  parent___parent___internal___mediaType\n  parent___parent___internal___owner\n  parent___parent___internal___type\n  parent___children\n  parent___children___id\n  parent___children___parent___id\n  parent___children___parent___children\n  parent___children___children\n  parent___children___children___id\n  parent___children___children___children\n  parent___children___internal___content\n  parent___children___internal___contentDigest\n  parent___children___internal___description\n  parent___children___internal___fieldOwners\n  parent___children___internal___ignoreType\n  parent___children___internal___mediaType\n  parent___children___internal___owner\n  parent___children___internal___type\n  parent___internal___content\n  parent___internal___contentDigest\n  parent___internal___description\n  parent___internal___fieldOwners\n  parent___internal___ignoreType\n  parent___internal___mediaType\n  parent___internal___owner\n  parent___internal___type\n  children\n  children___id\n  children___parent___id\n  children___parent___parent___id\n  children___parent___parent___children\n  children___parent___children\n  children___parent___children___id\n  children___parent___children___children\n  children___parent___internal___content\n  children___parent___internal___contentDigest\n  children___parent___internal___description\n  children___parent___internal___fieldOwners\n  children___parent___internal___ignoreType\n  children___parent___internal___mediaType\n  children___parent___internal___owner\n  children___parent___internal___type\n  children___children\n  children___children___id\n  children___children___parent___id\n  children___children___parent___children\n  children___children___children\n  children___children___children___id\n  children___children___children___children\n  children___children___internal___content\n  children___children___internal___contentDigest\n  children___children___internal___description\n  children___children___internal___fieldOwners\n  children___children___internal___ignoreType\n  children___children___internal___mediaType\n  children___children___internal___owner\n  children___children___internal___type\n  children___internal___content\n  children___internal___contentDigest\n  children___internal___description\n  children___internal___fieldOwners\n  children___internal___ignoreType\n  children___internal___mediaType\n  children___internal___owner\n  children___internal___type\n  internal___content\n  internal___contentDigest\n  internal___description\n  internal___fieldOwners\n  internal___ignoreType\n  internal___mediaType\n  internal___owner\n  internal___type\n  resolve\n  name\n  version\n  pluginOptions___isTSX\n  pluginOptions___jsxPragma\n  pluginOptions___allExtensions\n  pluginOptions___name\n  pluginOptions___path\n  pluginOptions___base64Width\n  pluginOptions___stripMetadata\n  pluginOptions___defaultQuality\n  pluginOptions___failOnError\n  pluginOptions___sourceMap\n  pluginOptions___autoLabel\n  pluginOptions___labelFormat\n  pluginOptions___cssPropOptimization\n  pluginOptions___extensions\n  pluginOptions___lessBabel\n  pluginOptions___mediaTypes\n  pluginOptions___pathCheck\n  nodeAPIs\n  browserAPIs\n  ssrAPIs\n  pluginFilepath\n  packageJson___name\n  packageJson___description\n  packageJson___version\n  packageJson___main\n  packageJson___author\n  packageJson___license\n  packageJson___dependencies\n  packageJson___dependencies___name\n  packageJson___dependencies___version\n  packageJson___devDependencies\n  packageJson___devDependencies___name\n  packageJson___devDependencies___version\n  packageJson___peerDependencies\n  packageJson___peerDependencies___name\n  packageJson___peerDependencies___version\n  packageJson___keywords\n}\n\ninput SitePluginFilterInput {\n  id: StringQueryOperatorInput\n  parent: NodeFilterInput\n  children: NodeFilterListInput\n  internal: InternalFilterInput\n  resolve: StringQueryOperatorInput\n  name: StringQueryOperatorInput\n  version: StringQueryOperatorInput\n  pluginOptions: SitePluginPluginOptionsFilterInput\n  nodeAPIs: StringQueryOperatorInput\n  browserAPIs: StringQueryOperatorInput\n  ssrAPIs: StringQueryOperatorInput\n  pluginFilepath: StringQueryOperatorInput\n  packageJson: SitePluginPackageJsonFilterInput\n}\n\ntype SitePluginGroupConnection {\n  totalCount: Int!\n  edges: [SitePluginEdge!]!\n  nodes: [SitePlugin!]!\n  pageInfo: PageInfo!\n  field: String!\n  fieldValue: String\n}\n\ntype SitePluginPackageJson {\n  name: String\n  description: String\n  version: String\n  main: String\n  author: String\n  license: String\n  dependencies: [SitePluginPackageJsonDependencies]\n  devDependencies: [SitePluginPackageJsonDevDependencies]\n  peerDependencies: [SitePluginPackageJsonPeerDependencies]\n  keywords: [String]\n}\n\ntype SitePluginPackageJsonDependencies {\n  name: String\n  version: String\n}\n\ninput SitePluginPackageJsonDependenciesFilterInput {\n  name: StringQueryOperatorInput\n  version: StringQueryOperatorInput\n}\n\ninput SitePluginPackageJsonDependenciesFilterListInput {\n  elemMatch: SitePluginPackageJsonDependenciesFilterInput\n}\n\ntype SitePluginPackageJsonDevDependencies {\n  name: String\n  version: String\n}\n\ninput SitePluginPackageJsonDevDependenciesFilterInput {\n  name: StringQueryOperatorInput\n  version: StringQueryOperatorInput\n}\n\ninput SitePluginPackageJsonDevDependenciesFilterListInput {\n  elemMatch: SitePluginPackageJsonDevDependenciesFilterInput\n}\n\ninput SitePluginPackageJsonFilterInput {\n  name: StringQueryOperatorInput\n  description: StringQueryOperatorInput\n  version: StringQueryOperatorInput\n  main: StringQueryOperatorInput\n  author: StringQueryOperatorInput\n  license: StringQueryOperatorInput\n  dependencies: SitePluginPackageJsonDependenciesFilterListInput\n  devDependencies: SitePluginPackageJsonDevDependenciesFilterListInput\n  peerDependencies: SitePluginPackageJsonPeerDependenciesFilterListInput\n  keywords: StringQueryOperatorInput\n}\n\ntype SitePluginPackageJsonPeerDependencies {\n  name: String\n  version: String\n}\n\ninput SitePluginPackageJsonPeerDependenciesFilterInput {\n  name: StringQueryOperatorInput\n  version: StringQueryOperatorInput\n}\n\ninput SitePluginPackageJsonPeerDependenciesFilterListInput {\n  elemMatch: SitePluginPackageJsonPeerDependenciesFilterInput\n}\n\ntype SitePluginPluginOptions {\n  isTSX: Boolean\n  jsxPragma: String\n  allExtensions: Boolean\n  name: String\n  path: String\n  base64Width: Int\n  stripMetadata: Boolean\n  defaultQuality: Int\n  failOnError: Boolean\n  sourceMap: Boolean\n  autoLabel: String\n  labelFormat: String\n  cssPropOptimization: Boolean\n  extensions: [String]\n  lessBabel: Boolean\n  mediaTypes: [String]\n  pathCheck: Boolean\n}\n\ninput SitePluginPluginOptionsFilterInput {\n  isTSX: BooleanQueryOperatorInput\n  jsxPragma: StringQueryOperatorInput\n  allExtensions: BooleanQueryOperatorInput\n  name: StringQueryOperatorInput\n  path: StringQueryOperatorInput\n  base64Width: IntQueryOperatorInput\n  stripMetadata: BooleanQueryOperatorInput\n  defaultQuality: IntQueryOperatorInput\n  failOnError: BooleanQueryOperatorInput\n  sourceMap: BooleanQueryOperatorInput\n  autoLabel: StringQueryOperatorInput\n  labelFormat: StringQueryOperatorInput\n  cssPropOptimization: BooleanQueryOperatorInput\n  extensions: StringQueryOperatorInput\n  lessBabel: BooleanQueryOperatorInput\n  mediaTypes: StringQueryOperatorInput\n  pathCheck: BooleanQueryOperatorInput\n}\n\ninput SitePluginSortInput {\n  fields: [SitePluginFieldsEnum]\n  order: [SortOrderEnum] = [ASC]\n}\n\ntype SiteSiteMetadata {\n  title: String\n  description: String\n}\n\ninput SiteSiteMetadataFilterInput {\n  title: StringQueryOperatorInput\n  description: StringQueryOperatorInput\n}\n\ninput SiteSortInput {\n  fields: [SiteFieldsEnum]\n  order: [SortOrderEnum] = [ASC]\n}\n\nenum SortOrderEnum {\n  ASC\n  DESC\n}\n\ninput StringQueryOperatorInput {\n  eq: String\n  ne: String\n  in: [String]\n  nin: [String]\n  regex: String\n  glob: String\n}\n\ninput TransformOptions {\n  grayscale: Boolean = false\n  duotone: DuotoneGradient\n  rotate: Int = 0\n  trim: Float = 0\n  cropFocus: ImageCropFocus = ATTENTION\n  fit: ImageFit = COVER\n}\n\ninput WebPOptions {\n  quality: Int\n}\n",
        "tagName": "graphql"
      }
    ],
    "react/jsx-pascal-case": "off",
    "jsx-a11y/accessible-emoji": "warn",
    "jsx-a11y/alt-text": "warn",
    "jsx-a11y/anchor-has-content": "warn",
    "jsx-a11y/anchor-is-valid": "warn",
    "jsx-a11y/aria-activedescendant-has-tabindex": "warn",
    "jsx-a11y/aria-props": "warn",
    "jsx-a11y/aria-proptypes": "warn",
    "jsx-a11y/aria-role": "warn",
    "jsx-a11y/aria-unsupported-elements": "warn",
    "jsx-a11y/click-events-have-key-events": "warn",
    "jsx-a11y/control-has-associated-label": [
      "warn",
      {
        "ignoreElements": [
          "audio",
          "canvas",
          "embed",
          "input",
          "textarea",
          "tr",
          "video"
        ],
        "ignoreRoles": [
          "grid",
          "listbox",
          "menu",
          "menubar",
          "radiogroup",
          "row",
          "tablist",
          "toolbar",
          "tree",
          "treegrid"
        ],
        "includeRoles": [
          "alert",
          "dialog"
        ]
      }
    ],
    "jsx-a11y/heading-has-content": "warn",
    "jsx-a11y/html-has-lang": "warn",
    "jsx-a11y/iframe-has-title": "warn",
    "jsx-a11y/img-redundant-alt": "warn",
    "jsx-a11y/interactive-supports-focus": [
      "warn",
      {
        "tabbable": [
          "button",
          "checkbox",
          "link",
          "progressbar",
          "searchbox",
          "slider",
          "spinbutton",
          "switch",
          "textbox"
        ]
      }
    ],
    "jsx-a11y/label-has-associated-control": "warn",
    "jsx-a11y/lang": "warn",
    "jsx-a11y/media-has-caption": "warn",
    "jsx-a11y/mouse-events-have-key-events": "warn",
    "jsx-a11y/no-access-key": "warn",
    "jsx-a11y/no-autofocus": "warn",
    "jsx-a11y/no-distracting-elements": "warn",
    "jsx-a11y/no-interactive-element-to-noninteractive-role": "warn",
    "jsx-a11y/no-noninteractive-element-interactions": [
      "warn",
      {
        "body": [
          "onError",
          "onLoad"
        ],
        "iframe": [
          "onError",
          "onLoad"
        ],
        "img": [
          "onError",
          "onLoad"
        ]
      }
    ],
    "jsx-a11y/no-noninteractive-element-to-interactive-role": "warn",
    "jsx-a11y/no-noninteractive-tabindex": "warn",
    "jsx-a11y/no-onchange": "warn",
    "jsx-a11y/no-redundant-roles": "warn",
    "jsx-a11y/no-static-element-interactions": "warn",
    "jsx-a11y/role-has-required-aria-props": "warn",
    "jsx-a11y/role-supports-aria-props": "warn",
    "jsx-a11y/scope": "warn",
    "jsx-a11y/tabindex-no-positive": "warn",
    "no-shadow": "off",
    "@typescript-eslint/no-shadow": [
      "error"
    ],
    "no-use-before-define": "off",
    "@typescript-eslint/no-use-before-define": [
      "error"
    ],
    "no-unused-vars": [
      "error",
      {
        "varsIgnorePattern": "(^_)|(^React$)",
        "argsIgnorePattern": "(^_)|(^React$)"
      }
    ],
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "varsIgnorePattern": "(^_)|(^React$)",
        "argsIgnorePattern": "(^_)|(^React$)"
      }
    ],
    "prefer-arrow-callback": "error",
    "arrow-body-style": [
      "error",
      "as-needed"
    ],
    "func-style": [
      "error",
      "declaration",
      {
        "allowArrowFunctions": true
      }
    ],
    "react/jsx-filename-extension": [
      "error",
      {
        "extensions": [
          ".tsx",
          ".jsx"
        ]
      }
    ],
    "import/extensions": [
      "error",
      "ignorePackages",
      {
        "js": "never",
        "jsx": "never",
        "ts": "never",
        "tsx": "never"
      }
    ],
    "import/no-duplicates": "off",
    "import/order": "off",
    "import/no-cycle": [
      "error",
      {
        "maxDepth": 10
      }
    ],
    "react/jsx-props-no-multi-spaces": "off"
  },
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "./tsconfig.json",
    "tsconfigRootDir": "./"
  },
  "settings": {
    "import/resolver": {
      "typescript": {
        "alwaysTryTypes": true
      }
    }
  },
  "overrides": [
    {
      "files": [
        "**/*.{ts,tsx}"
      ],
      "rules": {
        "no-unused-vars": "off"
      }
    },
    {
      "files": [
        "**/*.{ts,tsx}"
      ],
      "rules": {
        "react/prop-types": "off",
        "react/no-unused-prop-types": "off",
        "react/require-default-props": "off"
      }
    }
  ]
}