// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = "postgresql://dev:dev@postgresql:5432/dev"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id       String @id
  email    String @unique
  password String
  name     String

  workspaces WorkspacesOnUsers[]
}

model Workspace {
  id     String  @id
  name   String
  events Event[]

  users WorkspacesOnUsers[]
}

model WorkspacesOnUsers {
  user     User               @relation(fields: [userId], references: [id])
  userId   String
  userRole WorkspaceUserRoles

  workspace   Workspace @relation(fields: [workspaceId], references: [id])
  workspaceId String

  @@id([userId, workspaceId])
}

enum WorkspaceUserRoles {
  Administrator
  Moderator
  Reader
}

model Event {
  id   String @id
  slug String @unique

  meta     EventMeta?
  settings EventSettings?

  questions Question[]

  Workspace   Workspace @relation(fields: [workspaceId], references: [id])
  workspaceId String
}

model EventSettings {
  startDate DateTime
  endDate   DateTime

  event   Event  @relation(fields: [eventId], references: [id])
  eventId String @id
}

model EventMeta {
  title       String @db.VarChar(50)
  description String @db.VarChar(200)
  image       Bytes

  event   Event  @relation(fields: [eventId], references: [id])
  eventId String @id
}

model Question {
  id    String @id
  text  String
  order Int

  answers  Answer[]
  settings QuestionSettings?

  event   Event  @relation(fields: [eventId], references: [id])
  eventId String
}

model QuestionSettings {
  allowAnswers Boolean
  limitAnswers Boolean
  answersLimit Int

  allowLikes Boolean
  limitLikes Boolean
  likesLimit Int

  likesDisplayMode LikesDisplayMode

  question   Question @relation(fields: [questionId], references: [id])
  questionId String   @id
}

enum LikesDisplayMode {
  Percentage
  Numeric
}

model Answer {
  id           String   @id
  text         String
  author       String
  createdAt    DateTime @default(now())
  isPredefined Boolean  @default(false)

  likes Like[]

  question   Question @relation(fields: [questionId], references: [id])
  questionId String
}

model Like {
  author String

  answer   Answer @relation(fields: [answerId], references: [id])
  answerId String

  @@id([author, answerId])
}
